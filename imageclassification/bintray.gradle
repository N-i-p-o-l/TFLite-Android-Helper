/*
 * Copyright 2019 Ahmed Gamal. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *     http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = PUBLISHED_GROUP_ID
version = LIBRARY_VERSION

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId PUBLISHED_GROUP_ID
                artifactId ARTIFACT

                name LIBRARY_NAME
                description LIBRARY_DESCRIPTION
                url SITE_URL

                licenses {
                    license {
                        name LICENSE_NAME
                            url LICENSE_URL
                    }
                }
            developers {
                developer {
                    id DEVELOPER_ID
                        name DEVELOPER_NAME
                        email DEVELOPER_EMAIL
                }
            }
            scm {
                connection GIT_URL
                    developerConnection GIT_URL
                    url SITE_URL
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
        archives sourcesJar
}

bintray {
    Properties properties = new Properties()
    File localPropFile = project.rootProject.file('local.properties')

    // If deployment from local repo, then fetch user and api key from local.properties. Otherwise, get them from Travis env remotely
    if (localPropFile.exists()) {
        properties.load(localPropFile.newDataInputStream())
    } else {
        if (System.getenv('BINTRAY_USER') != null) {
            properties.setProperty("bintray.user", System.getenv('BINTRAY_USER'))
        }

        if (System.getenv('BINTRAY_API_KEY') != null) {
            properties.setProperty("bintray.apikey", System.getenv('BINTRAY_API_KEY'))
        }
    }

    if (properties.getProperty("bintray.user") != null) {
        user = properties.getProperty("bintray.user")
    }

    if (properties.getProperty("bintray.apikey") != null) {
        key = properties.getProperty("bintray.apikey")
    }

    configurations = ['archives']
    pkg {
        repo = BINTRAY_REPO
        name = BINRTAY_NAME
        desc = LIBRARY_DESCRIPTION
        websiteUrl = SITE_URL
        vcsUrl = GIT_URL
        licenses = ['Apache-2.0']
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = LIBRARY_DESCRIPTION
        }
    }
}
